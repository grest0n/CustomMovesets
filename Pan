local AccessorySettings = {
    RemoveOriginalAccessories = false --set true to remove accessories
}

local function DisableCollisions(object)
    if object:IsA("BasePart") then
        object.CanCollide = false
        object.CanTouch = false
        object.CanQuery = false
    end
end

local function AttachAccessories(accessoryTable)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if AccessorySettings.RemoveOriginalAccessories then
        for _, obj in pairs(character:GetChildren()) do
            if obj:IsA("Accessory") then
                obj:Destroy()
            end
        end
    end

    for _, accessoryData in pairs(accessoryTable) do
        local item = game:GetObjects("rbxassetid://" .. tostring(accessoryData.AssetID))[1]
        if not item then
            warn("Failed to load item with ID: " .. tostring(accessoryData.AssetID))
            return
        end

        --convert
        if item:IsA("Tool") then
            local newAccessory = Instance.new("Accessory")
            local handle = item:FindFirstChildWhichIsA("Part") or item:FindFirstChildWhichIsA("MeshPart")

            if handle then
                handle.Parent = newAccessory
                newAccessory.Parent = character
                newAccessory.Name = "ConvertedAccessory"

                DisableCollisions(handle)

                local targetPart = character:FindFirstChild(accessoryData.AttachTo)
                if targetPart then
                    local weld = Instance.new("Weld")
                    weld.Part0 = targetPart
                    weld.Part1 = handle
                    weld.C0 = CFrame.new(accessoryData.Position) * CFrame.Angles(
                        math.rad(accessoryData.Rotation.X),
                        math.rad(accessoryData.Rotation.Y),
                        math.rad(accessoryData.Rotation.Z)
                    )
                    weld.Parent = targetPart
                end
            end
        else
            item.Parent = character
            local targetPart = character:FindFirstChild(accessoryData.AttachTo)
            if targetPart then
                local attachPart = item:FindFirstChildWhichIsA("MeshPart") or item:FindFirstChildWhichIsA("Part")
                if attachPart then
                    DisableCollisions(attachPart)

                    local weld = Instance.new("Weld")
                    weld.Part0 = targetPart
                    weld.Part1 = attachPart
                    weld.C0 = CFrame.new(accessoryData.Position) * CFrame.Angles(
                        math.rad(accessoryData.Rotation.X),
                        math.rad(accessoryData.Rotation.Y),
                        math.rad(accessoryData.Rotation.Z)
                    )
                    weld.Parent = targetPart
                end
            end
        end
    end
end
 
--[[ACCESSORIES]]  
local Accessories = {
    {
        AssetID = 79452721859915,  --ex FAKE sword accessory
        AttachTo = "Right Arm",
        Position = Vector3.new(0, -0.5, -1.2),
        Rotation = Vector3.new(0, 55, 0)
    }
}

AttachAccessories(Accessories)

--[[END OF ACCESSORY AND GEAR CONVERTER FUNC]]  

--[[doodoo customization system lool]]  
local PlayerCustomization = {
    EnableSkinToneChange = false, --set false to disable
    SkinTones = {
        Head = "Pastel brown",
        Torso = "Black",
        LeftArm = "Pastel brown",
        RightArm = "Pastel brown",
        LeftLeg = "Black",
        RightLeg = "Black"
    },
    RemoveMeshes = false, --NO char meshes (ex: man arm, leg etc)
    HeadSize = Vector3.new(1.25, 1.25, 1.25),
    Clothes = {
        Shirt = nil, --Set to nil to keep default Shirt
        Pants = nil, --Set to nil to keep default Pants
	
        --[[keep in mind you need a clothing (ShirtTemplate or PantsTemplate) to
	use this feature, (you can grab them via btroblox [click on clothing, search
	inside instances and search for respective template] or via roblox studio by
	inserting the clothing, clicking on the instance and copying the id from the
	respective template)]]
    }
}

--[[SKFUNC]]  
local function ApplySkinTone()
    if not PlayerCustomization.EnableSkinToneChange then return end
    
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local bodyParts = {
        Head = "Head",
        Torso = "Torso",
        LeftArm = "Left Arm",
        RightArm = "Right Arm",
        LeftLeg = "Left Leg",
        RightLeg = "Right Leg"
    }

    for partName, skinColor in pairs(PlayerCustomization.SkinTones) do
        local bodyPart = character:FindFirstChild(bodyParts[partName])
        if bodyPart and skinColor then
            bodyPart.BrickColor = BrickColor.new(skinColor)
        end
    end
end

--[[doodoo anti character meshes no touchy pls]]  
local function ResetCharacterMesh()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if PlayerCustomization.RemoveMeshes then
        for _, obj in pairs(character:GetChildren()) do
            if obj:IsA("CharacterMesh") then
                obj:Destroy()
            end
        end

        local head = character:FindFirstChild("Head")
        if head then
            for _, obj in pairs(head:GetChildren()) do
                if obj:IsA("SpecialMesh") then
                    obj:Destroy()
                end
            end

            local headMesh = Instance.new("SpecialMesh")
            headMesh.MeshType = Enum.MeshType.Head
            headMesh.Scale = PlayerCustomization.HeadSize
            headMesh.Parent = head
        end
    end
end

--[[CLOTHES]]  
local function ApplyClothes()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if PlayerCustomization.Clothes.Shirt then
        local shirt = character:FindFirstChildOfClass("Shirt") or Instance.new("Shirt")
        shirt.ShirtTemplate = "rbxassetid://" .. tostring(PlayerCustomization.Clothes.Shirt)
        shirt.Parent = character
    end

    if PlayerCustomization.Clothes.Pants then
        local pants = character:FindFirstChildOfClass("Pants") or Instance.new("Pants")
        pants.PantsTemplate = "rbxassetid://" .. tostring(PlayerCustomization.Clothes.Pants)
        pants.Parent = character
    end
end

--[[APPLY WHEN SPAWN!!!!!!!!]]  
local function ApplyPlayerCustomization()
    ApplySkinTone()
    ResetCharacterMesh()
    ApplyClothes()
end

ApplyPlayerCustomization()
--[[end of doodoo customization system lool]]

-- CREDITS

local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

-- Frame for Text
local frame = Instance.new("Frame")
frame.Parent = gui
frame.Size = UDim2.new(0.5, 0, 0.2, 0)
frame.Position = UDim2.new(0.25, 0, 0.1, 0)
frame.BackgroundTransparency = 1

-- UIListLayout for Auto Positioning
local layout = Instance.new("UIListLayout")
layout.Parent = frame
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 5) -- Space between title and subtitle

-- Title Text
local titleLabel = Instance.new("TextLabel")
titleLabel.Parent = frame
titleLabel.Size = UDim2.new(1, 0, 0.5, 0)
titleLabel.Text = "Script By horizon.rbx and Formid"
titleLabel.TextColor3 = Color3.fromRGB(170, 170, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.Arcade

-- Subtitle (Discord Link)
local subtitleLabel = Instance.new("TextLabel")
subtitleLabel.Parent = frame
subtitleLabel.Size = UDim2.new(1, 0, 0.3, 0)
subtitleLabel.Text = "Enjoy the script!"
subtitleLabel.TextColor3 = Color3.fromRGB(170, 170, 255)
subtitleLabel.BackgroundTransparency = 1
subtitleLabel.TextScaled = true
subtitleLabel.Font = Enum.Font.Arcade
subtitleLabel.TextTransparency = 0.2 -- Slight transparency

local player = game.Players.LocalPlayer
	local char = player.Character
	local Humanoid = char.Humanoid
	local hot = player.PlayerGui:WaitForChild("Hotbar")
	local hotbar = hot:WaitForChild("Backpack"):WaitForChild("Hotbar")

	local function cloneToolName(slot, text)
		local toolName = slot.ToolName
		if not slot:FindFirstChild("CustomName") then
			toolName.Visible = false
			local clone = toolName:Clone()
			clone.Name = "CustomName"
			clone.Parent = slot
			clone.Text = text
			clone.Visible = true
		elseif slot:FindFirstChild("CustomName") then
			if slot:FindFirstChild("CustomName").Text ~= text then
				toolName.Visible = false
				slot:FindFirstChild("CustomName").Text = text
			end
		end
	end

	local magichealth = player.PlayerGui:WaitForChild("ScreenGui"):WaitForChild("MagicHealth")
	local UltLabel = magichealth:WaitForChild("TextLabel")
	UltLabel.Visible = false
	local UltLabel = UltLabel:Clone()
	UltLabel.Visible = true
	UltLabel.Name = "UltThing"
	UltLabel.Parent = magichealth

	local toolNameMap = {
		["Normal Punch"] = "Iron Impact",
		["Consecutive Punches"] = "Panny Smicks",
		["Shove"] = "Steel Justice",
		["Uppercut"] = "Pan-demonium",
		["Death Counter"] = "Final Sear",
		["Table Flip"] = "Pan Destruction",
		["Serious Punch"] = "Heavy Iron Strike",
		["Omni Directional Punch"] = "Full-Circle Slam"
	}

	local function typeText(label, text, delay)
		delay = delay or 0.05
		local originalText = text
		label.Text = ""
		for i = 1, #originalText do
			label.Text = string.sub(originalText, 1, i)
			task.wait(delay)
		end
	end
	local ultTexts = {
		"Cast Iron Judgment",
		"Panishing Blow"
	}


	local typedTools = {}

	local function updateToolNames()
		for _, slot in ipairs(hotbar:GetChildren()) do
			if slot:FindFirstChild("Base") and slot.Base:FindFirstChild("ToolName") then
				local toolNameText = slot.Base.ToolName.Text
				local newName = toolNameMap[toolNameText]
				if newName then
					cloneToolName(slot.Base, newName)
					if slot.Base:FindFirstChild("CustomName") and not typedTools[newName] then
						typeText(slot.Base.CustomName, newName, 0.03)
						typedTools[newName] = true


					end
				end
			end
		end
	end

	task.spawn(
		function()
			local currentUltIndex = 1

			while true do
				typeText(UltLabel, ultTexts[currentUltIndex], 0.05)
				currentUltIndex = (currentUltIndex % #ultTexts) + 1

				pcall(
					function()
					end
				)

				updateToolNames()
				task.wait(10)
			end
		end
	)

	task.spawn(
		function()
			while task.wait(1) do
				updateToolNames()
			end
		end
	)

--[ [ SETTINGS ] ]
getgenv().UltBarActivateText = "[ TRANSFORM ]"

--[ [ BAR ] ]

local LocalPlayer = game.Players.LocalPlayer
 
LocalPlayer.PlayerGui.ScreenGui.MagicHealth.Health.Bar.Bar.Image = "rbxassetid://17136251960"
LocalPlayer.PlayerGui.ScreenGui.MagicHealth.Health.Glow.Image = "rbxassetid://17136251821"
LocalPlayer.PlayerGui.ScreenGui.MagicHealth.Health.Bar.Bar.ImageColor3 = Color3.fromRGB(41, 37, 37)

local player = game.Players.LocalPlayer
local char = player.Character
local Humanoid = char.Humanoid
local hot = player.PlayerGui:WaitForChild("Hotbar")
local hotbar = hot:WaitForChild("Backpack"):WaitForChild("Hotbar")

---------------------       ANIMATIONS       -------------------------------------

-- Move 1
local OriginalAnimation = 10468665991
local ReplacedAnimation = 14004235777

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 8 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)

local Test = game.ReplicatedStorage.Resources.UFW.vfx.PunchFX.groundsmoke.groundsmoke.floor

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = false
    end
end

delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Move 2
local OriginalAnimation = 10466974800
local ReplacedAnimation = 15290930205

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 8 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)

local Test = game.ReplicatedStorage.Resources.AtomicSlash.AtomicSlash.Part.WindyTime

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = false
    end
end

delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Move 3
local OriginalAnimation = 10471336737
local ReplacedAnimation = 15676072469

local StartTime = 0 -- which time it starts like video
local Speed = 3 -- animation speed
local Duration = 8 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)

local Test = game.ReplicatedStorage.Resources.KJEffects.KJWallCombo.FinalImpact.Attachment

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = false
    end
end

delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Wall Combo
local OriginalAnimation = 15955393872
local ReplacedAnimation = 16023456135

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 10 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)
delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- M1s
local m1 = 15259161390
local m2 = 15240216931
local m3 = 15240176873
local m4 = 15162694192

local function handleAnimationDetection(animIdsToStop, replacementAnimId)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid

    local function onAnimPlayed(animationTrack)
        local animId = tonumber(string.match(animationTrack.Animation.AnimationId, "%d+"))

        for _, stopId in ipairs(animIdsToStop) do
            if animId == stopId then
                animationTrack:Stop()
                local a = Instance.new("Animation")
a.AnimationId = "rbxassetid://" .. replacementAnimId
local p = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(a)
p:Play()
            end
        end
    end

    humanoid.AnimationPlayed:Connect(onAnimPlayed)
end

-- First set of animations
local firstAnimIdsToStop = {10469493270, 13532562418, 13491635433, 13370310513, 14004222985, 15259161390, 16515503507, 17889458563}
handleAnimationDetection(firstAnimIdsToStop, m1)

-- Second set of animations
local secondAnimIdsToStop = {10469630950, 13532600125, 13296577783, 13390230973, 13997092940, 15240216931, 16515520431, 17889461810}
handleAnimationDetection(secondAnimIdsToStop, m2)

-- Third set of animations
local thirdAnimIdsToStop = {10469639222, 13532604085, 13295919399, 13378751717, 14001963401, 15240176873, 16515448089, 17889471098}
handleAnimationDetection(thirdAnimIdsToStop, m3)

-- Fourth set of animations
local fourthAnimIdsToStop = {10469643643, 13294471966, 13295936866, 13378708199, 14136436157, 15162694192, 16552234590, 17889290569}
handleAnimationDetection(fourthAnimIdsToStop, m4)

-- Ultimate Move 2
local OriginalAnimation = 11365563255
local ReplacedAnimation = 18459215845

local StartTime = 0 -- which time it starts like video
local Speed = 0.2 -- animation speed
local Duration = 9 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)
delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Move 3
local OriginalAnimation = 12983333733
local ReplacedAnimation = 18903642853

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 10 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)
delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Move 4
local OriginalAnimation = 13927612951
local ReplacedAnimation = 100255267749203

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 13 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)

local Sound = 1837829473
local Volume = 5
local Speed = 1

s= Instance.new("Sound")
s.SoundId = "rbxassetid://" .. Sound
s.Volume = Volume
s.PlaybackSpeed = Speed
s.Parent = Workspace
s:Play()

delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Awakening
local OriginalAnimation = 12447707844
local ReplacedAnimation = 132259592388175

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 4 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function playVFX()
    task.wait(1) -- Wait 2 seconds before showing VFX

    -- Ensure the VFX exists before cloning
    local Test = game.ReplicatedStorage:FindFirstChild("Resources")
    if Test then
        Test = Test:FindFirstChild("LastBreath")
        if Test then
            Test = Test:FindFirstChild("StartF")
            if Test then
                Test = Test:FindFirstChild("Head")
                if Test then
                    Test = Test:FindFirstChild("Attachment")
                end
            end
        end
    end

    if not Test then
        warn("VFX path for Ultimate Move 3 is incorrect or missing!")
        return
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        local testClone = Test:Clone()
        testClone.Parent = rootPart

        -- Ensure all ParticleEmitters emit properly
        for _, child in ipairs(testClone:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child.Enabled = true
                child:Emit(15)  -- Emit particles
            end
        end

        -- Remove VFX after a few seconds
        task.wait(3)  -- VFX disappears after 2 seconds
        testClone:Destroy()
    else
        warn("HumanoidRootPart not found! VFX cannot be played.")
    end
end

-- Call the function when needed
playVFX()

delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Move 4 (End)
local OriginalAnimation = 13929182266
local ReplacedAnimation = 18435303746

local StartTime = 0 -- which time it starts like video
local Speed = 1 -- animation speed
local Duration = 7 -- when the animation stops

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. OriginalAnimation then
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://" .. ReplacedAnimation
local Anim = Humanoid:LoadAnimation(AnimAnim)
Anim:Play()
Anim.TimePosition = StartTime
Anim:AdjustSpeed(Speed)
delay(Duration, function() 
Anim:Stop()
end)
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- BarrageBind Remover
workspace.Thrown.ChildAdded:Connect(function(d)
    if d.Name == "Ring" then
    game:GetService("RunService").Heartbeat:Connect(function()
    d:Destroy()
    end)
    end
    if d.Name == "Model" then
    game:GetService("RunService").Heartbeat:Connect(function()
    d:Destroy()
    end)
    end
    end)
    game.Players.LocalPlayer.Character.ChildAdded:Connect(function(d)
    if d.Name == "BarrageBind" then
    game:GetService("RunService").Heartbeat:Connect(function()
    d:Destroy()
    end)
    end
    end)
    workspace.Terrain.Character.ChildAdded:Connect(function(d)
    if d.Name == "SmokeBack" then
    game:GetService("RunService").Heartbeat:Connect(function()
    d:Destroy()
    end)
    end
    end)
